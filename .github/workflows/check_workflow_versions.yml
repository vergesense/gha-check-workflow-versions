---
name: check workflow versions
on:
  workflow_call:
    inputs:
      repo-name:
        description: The name of the repository the reusable workflow is kept in.
        required: true
        type: string
      reusable-workflow-job-id:
        description: The job id that is running the reusable workflow.
        required: true
        type: string
      gha-workflow-file-name:
        description: The name of the reusable workflow github actions file.
        required: true
        type: string
    secrets:
      github-access-token:
        description: Github authentication token needed to post a comment in the PR.
        required: true

jobs:
  build:
    name: check workflow versions
    runs-on: ubuntu-latest
    steps:
      - name: set-env-vars
        run: |
          {
            echo "REPO_NAME=${{ inputs.repo-name }}"
            echo "REUSABLE_WORKFLOW_JOB_ID=${{ inputs.reusable-workflow-job-id }}"
            echo "FILE_NAME=${{ inputs.gha-workflow-file-name }}"
          } >> "$GITHUB_ENV"
      - id: get_latest_workflow_version
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: vergesense
          repo: "${{ env.REPO_NAME }}"
          excludes: prerelease, draft
      - id: output_version
        run: |
          echo "version is ${{ steps.get_latest_workflow_version.outputs.release }}"
          echo "::set-output name=WORKFLOW_VERSION::${{ steps.get_latest_workflow_version.outputs.release }}"
      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml packaging
      - uses: actions/checkout@v2
      - uses: jannekem/run-python-script-action@v1
        id: version_compare
        with:
          fail-on-error: false
          script: |
            import yaml
            import os
            from packaging import version

            latest_release_version = "${{ steps.output_version.outputs.WORKFLOW_VERSION }}"
            with open("./.github/workflows/${{ env.FILE_NAME }}",'r') as file:
                file_contents = yaml.safe_load(file)

            url = file_contents['jobs']["${{ env.REUSABLE_WORKFLOW_JOB_ID }}"]['uses']
            url_array = url.split("/")[4]
            current_version_used = url_array.split("@")[1]
            major_version = latest_release_version.split(".")[0]

            print("latest_release_version",latest_release_version,"current_version_used",current_version_used)

            is_latest_major_release = version.parse(major_version) <= version.parse(current_version_used)

            if is_latest_major_release:
                print("Currently using latest release version.")
            else:
                print("Newer release available:",latest_release_version)
      - name: Print errors
        if: steps.version_compare.outputs.error == 'true'
        run: |
          printenv "SCRIPT_STDOUT"
          printenv "SCRIPT_STDERR"
        env:
          SCRIPT_STDOUT: ${{ steps.version_compare.outputs.stdout }}
          SCRIPT_STDERR: ${{ steps.version_compare.outputs.stderr }}
      - name: 'Comment PR'
        uses: actions/github-script@v5
        if: contains(steps.version_compare.outputs.stdout, 'Newer release available')
        with:
          github-token: ${{ secrets.github-access-token }}
          script: |
            github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "New major version available: ${{ steps.output_version.outputs.WORKFLOW_VERSION }} \r\n \
            https://github.com/vergesense/${{ env.REPO_NAME }}"
            })
