---
name: check workflow version
on:
  workflow_call:
    inputs:
      repo-name:
        description: The name of the repository the reusable workflow is kept in.
        required: true
        type: string
      reusable-workflow-job-id:
        description: The job id that is running the reusable workflow.
        required: true
        type: string
      gha-workflow-file-name:
        description: The name of the reusable workflow github actions file.
        required: true
        type: string

jobs:
  build:
    name: check workflow latest major version
    runs-on: ubuntu-latest
    steps:
      - name: set-env-vars
        run: |
          {
            echo "REPO_NAME=${{ inputs.repo-name }}"
            echo "REUSABLE_WORKFLOW_JOB_ID=${{ inputs.reusable-workflow-job-id }}"
            echo "FILE_NAME=${{ inputs.gha-workflow-file-name }}"
          } >> "$GITHUB_ENV"
      - id: get_latest_release_version
        uses: actions/github-script@v5
        with:
          script: |
            var owner = 'vergesense'
            var repo = "${{ env.REPO_NAME }}";

            var releases  = await github.rest.repos.listReleases({
              owner: owner,
              repo: repo,
            })

            releases = releases.data
            releases = releases.filter(x => x.prerelease != true);
            releases = releases.filter(x => x.draft != true);

            core.setOutput('release', releases[0].tag_name);
      - id: output_version
        run: |
          echo "version is ${{ steps.get_latest_release_version.outputs.result }}"
          echo "::set-output name=WORKFLOW_VERSION::${{ steps.get_latest_release_version.outputs.result }}"
      - uses: actions/setup-python@v2
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml packaging
      - uses: actions/checkout@v2
      - name: Version compare
        id: version_compare
        run: |
          import yaml
          from packaging import version

          latest_release_version = "${{ steps.output_version.outputs.WORKFLOW_VERSION }}"
          with open("./.github/workflows/${{ env.FILE_NAME }}",'r') as file:
              file_contents = yaml.safe_load(file)

          url = file_contents['jobs']["${{ env.REUSABLE_WORKFLOW_JOB_ID }}"]['uses']
          url_array = url.split("/")[4]
          current_version_used = url_array.split("@")[1]
          major_version = latest_release_version.split(".")[0]

          print("latest_release_version",latest_release_version,"current_version_used",current_version_used)

          is_latest_major_release = version.parse(major_version) <= version.parse(current_version_used)

          if is_latest_major_release:
              print("::set-output name=IS_LATEST_RELEASE::'true'")
          else:
              print("::set-output name=IS_LATEST_RELEASE::'false'")
        shell: python
      - name: 'Comment PR'
        uses: actions/github-script@v5
        if: contains(steps.version_compare.outputs.IS_LATEST_RELEASE, 'false')
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "New major version available: ${{ steps.output_version.outputs.WORKFLOW_VERSION }}  \r\n \
              https://github.com/vergesense/${{ env.REPO_NAME }}"
            })
